{"version":3,"file":"index.js","sources":["../dist-src/version.js","../dist-src/util/get-config-file.js","../dist-src/util/extends-to-get-content-params.js","../dist-src/util/get-config-files.js","../dist-src/compose-config-get.js","../dist-src/index.js"],"sourcesContent":["export const VERSION = \"1.1.0\";\n","import yaml from \"js-yaml\";\nconst SUPPORTED_FILE_EXTENSIONS = [\"json\", \"yml\", \"yaml\"];\n/**\n * Load configuration from a given repository and path.\n *\n * @param octokit Octokit instance\n * @param options\n */\nexport async function getConfigFile(octokit, { owner, repo, path, ref }) {\n    const fileExtension = path.split(\".\").pop().toLowerCase();\n    if (!SUPPORTED_FILE_EXTENSIONS.includes(fileExtension)) {\n        throw new Error(`[@probot/octokit-plugin-config] .${fileExtension} extension is not support for configuration (path: \"${path}\")`);\n    }\n    // https://docs.github.com/en/rest/reference/repos#get-repository-content\n    const endpoint = {\n        method: \"GET\",\n        url: \"/repos/{owner}/{repo}/contents/{path}\",\n        owner,\n        repo,\n        path,\n        mediaType: {\n            format: \"raw\",\n        },\n        // this can be just `ref` once https://github.com/octokit/endpoint.js/issues/206 is resolved\n        ...(ref ? { ref } : {}),\n    };\n    const { url } = await octokit.request.endpoint(endpoint);\n    const emptyConfigResult = {\n        owner,\n        repo,\n        path,\n        url,\n        config: null,\n    };\n    try {\n        const { data, headers } = await octokit.request(endpoint);\n        // If path is a submodule, or a folder, then a JSON string is returned with\n        // the \"Content-Type\" header set to \"application/json; charset=utf-8\".\n        //\n        // - https://docs.github.com/en/rest/reference/repos#if-the-content-is-a-submodule\n        // - https://docs.github.com/en/rest/reference/repos#if-the-content-is-a-directory\n        //\n        // symlinks just return the content of the linked file when requesting the raw formt,\n        // so we are fine\n        if (headers[\"content-type\"] === \"application/json; charset=utf-8\") {\n            throw new Error(`[@probot/octokit-plugin-config] ${url} exists, but is either a directory or a submodule. Ignoring.`);\n        }\n        if (fileExtension === \"json\") {\n            if (typeof data === \"string\") {\n                throw new Error(`[@probot/octokit-plugin-config] Configuration could not be parsed from ${url} (invalid JSON)`);\n            }\n            return {\n                ...emptyConfigResult,\n                config: data,\n            };\n        }\n        const config = (yaml.load(data) || {});\n        if (typeof config === \"string\") {\n            throw new Error(`[@probot/octokit-plugin-config] Configuration could not be parsed from ${url} (YAML is not an object)`);\n        }\n        return {\n            ...emptyConfigResult,\n            config,\n        };\n    }\n    catch (error) {\n        if (error.status === 404) {\n            return emptyConfigResult;\n        }\n        if (error.name === \"YAMLException\") {\n            const reason = /unknown tag/.test(error.message)\n                ? \"unsafe YAML\"\n                : \"invalid YAML\";\n            throw new Error(`[@probot/octokit-plugin-config] Configuration could not be parsed from ${url} (${reason})`);\n        }\n        throw error;\n    }\n}\n","const EXTENDS_REGEX = new RegExp(\"^\" +\n    \"(?:([a-z\\\\d](?:[a-z\\\\d]|-(?=[a-z\\\\d])){0,38})/)?\" + // org\n    \"([-_.\\\\w\\\\d]+)\" + // project\n    \"(?::([-_./\\\\w\\\\d]+\\\\.ya?ml))?\" + // filename\n    \"$\", \"i\");\n/**\n * Computes parameters to retrieve the configuration file specified in _extends\n *\n * Base can either be the name of a repository in the same organization or\n * a full slug \"organization/repo\".\n *\n * @param options\n * @return The params needed to retrieve a configuration file\n */\nexport function extendsToGetContentParams({ owner, path, url, extendsValue, }) {\n    if (typeof extendsValue !== \"string\") {\n        throw new Error(`[@probot/octokit-plugin-config] Invalid value ${JSON.stringify(extendsValue)} for _extends in ${url}`);\n    }\n    const match = extendsValue.match(EXTENDS_REGEX);\n    if (match === null) {\n        throw new Error(`[@probot/octokit-plugin-config] Invalid value \"${extendsValue}\" for _extends in ${url}`);\n    }\n    return {\n        owner: match[1] || owner,\n        repo: match[2],\n        path: match[3] || path,\n    };\n}\n","import { getConfigFile } from \"./get-config-file\";\nimport { extendsToGetContentParams } from \"./extends-to-get-content-params\";\n/**\n * Load configuration from selected repository file. If the file does not exist\n * it loads configuration from the owners `.github` repository.\n *\n * If the repository file configuration includes an `_extends` key, that file\n * is loaded. Same with the target file until no `_extends` key is present.\n *\n * @param octokit Octokit instance\n * @param options\n */\nexport async function getConfigFiles(octokit, { owner, repo, path, branch }) {\n    const requestedRepoFile = await getConfigFile(octokit, {\n        owner,\n        repo,\n        path,\n        ref: branch,\n    });\n    // if no configuration file present in selected repository,\n    // try to load it from the `.github` repository\n    if (!requestedRepoFile.config) {\n        if (repo === \".github\") {\n            return [requestedRepoFile];\n        }\n        const defaultRepoConfig = await getConfigFile(octokit, {\n            owner,\n            repo: \".github\",\n            path,\n        });\n        return [requestedRepoFile, defaultRepoConfig];\n    }\n    // if the configuration has no `_extends` key, we are done here.\n    if (!requestedRepoFile.config._extends) {\n        return [requestedRepoFile];\n    }\n    // parse the value of `_extends` into request parameters to\n    // retrieve the new configuration file\n    let extendConfigOptions = extendsToGetContentParams({\n        owner,\n        path,\n        url: requestedRepoFile.url,\n        extendsValue: requestedRepoFile.config._extends,\n    });\n    // remove the `_extends` key from the configuration that is returned\n    delete requestedRepoFile.config._extends;\n    const files = [requestedRepoFile];\n    // now load the configuration linked from the `_extends` key. If that\n    // configuration also includes an `_extends` key, then load that configuration\n    // as well, until the target configuration has no `_extends` key\n    do {\n        const extendRepoConfig = await getConfigFile(octokit, extendConfigOptions);\n        files.push(extendRepoConfig);\n        if (!extendRepoConfig.config || !extendRepoConfig.config._extends) {\n            return files;\n        }\n        extendConfigOptions = extendsToGetContentParams({\n            owner,\n            path,\n            url: extendRepoConfig.url,\n            extendsValue: extendRepoConfig.config._extends,\n        });\n        delete extendRepoConfig.config._extends;\n        // Avoid loops\n        const alreadyLoaded = files.find((file) => file.owner === extendConfigOptions.owner &&\n            file.repo === extendConfigOptions.repo &&\n            file.path === extendConfigOptions.path);\n        if (alreadyLoaded) {\n            throw new Error(`[@probot/octokit-plugin-config] Recursion detected. Ignoring  \"_extends: ${extendRepoConfig.config._extends}\" from ${extendRepoConfig.url} because ${alreadyLoaded.url} was already loaded.`);\n        }\n    } while (true);\n}\n","import { getConfigFiles } from \"./util/get-config-files\";\n/**\n * Loads configuration from one or multiple files and resolves with\n * the combined configuration as well as the list of files the configuration\n * was loaded from\n *\n * @param octokit Octokit instance\n * @param options\n */\nexport async function composeConfigGet(octokit, { owner, repo, defaults, path, branch }) {\n    const files = await getConfigFiles(octokit, {\n        owner,\n        repo,\n        path,\n        branch,\n    });\n    const configs = files\n        .map((file) => file.config)\n        .reverse()\n        .filter(Boolean);\n    return {\n        files,\n        config: typeof defaults === \"function\"\n            ? defaults(configs)\n            : Object.assign({}, defaults, ...configs),\n    };\n}\n","import { VERSION } from \"./version\";\nimport { composeConfigGet } from \"./compose-config-get\";\n/**\n * @param octokit Octokit instance\n */\nexport function config(octokit) {\n    return {\n        config: {\n            async get(options) {\n                return composeConfigGet(octokit, options);\n            },\n        },\n    };\n}\nconfig.VERSION = VERSION;\nexport { composeConfigGet } from \"./compose-config-get\";\n"],"names":[],"mappings":"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"}